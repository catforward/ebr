# 这不是更新日至
v20190928
这个小工具已经完成了现阶段所有需求，以后应该就是维持现状了。
再接下来的更新应该就是小打小闹的修修补补了，也许新的JDK版本出了会体验一把新语法吧。
另外，也不知道能不能用GraalVm编译成本地代码，说不定可以不用再依赖JRE了呢

v20190818
有一天，纯粹的有一天，又是一次纯粹的吃饱撑的，脑袋里在想，这么个简单玩意儿
拖着guava和jackson这两个库，依赖很紧密吗，没有阿，那干嘛拖着这么大尾巴阿。
把依赖的功能自己实现一遍阿，又不是不会。
当然了，自己实现的所谓完美性嘛，能合我心意就行了，不要把生命浪费在强迫症上。

v20190606
对程序的实现上又有了新的想法，加上加上都加上，改了改了都改了。
吃饱了撑的，这么个小工具，搞得越来越复杂了，脱了裤子放屁，多此一举阿。
不过呢，所谓的设计品位和实现的优雅度本身就是屁！
来个不恰当的类比，当你大学时可能会觉得身边的女同学好幼稚，成熟的大姐姐们才是心中理想的女性，
但当人到中年突然会觉得学生时代的单纯又变成了心中的理想。
此一时彼一时，没有绝对，看着来吧。

v20190528
凭着记忆并且加上了一些新的想法，重制开始。
执行效果不变的前提下，妄图体验并使用最新的语法，
同时试着搞一搞所谓的设计模式。当然了设计模式这东西又不是定律，
都是根据环境在实现方式上选择的所谓最佳组合。既然是实验，
所谓最佳实践是不存在的，都是随心所欲的来。

2019年以前
要说此工具的制作目的，可以说家里用来做实验的服务器上包着十几个小脚本，
虽然不复杂但是有严格的前后依存关系，用Cron来定时启动吧，因为无法精确预计每个任务的执行时间
所以总要在任务之间加一段缓冲时间，总体执行效率并不高。遂起念做个极简的并行任务调度工具。
至于实现上，其实至少１年前就已经实现过了。最开始用python，没做完就放弃了。
做起来和执行起来都慢（可能是我脑回路不适合python，只能把它当脚本用了）
后来改用java做，很简单主线程加若干工作线程一把梭搞定。但是有次服务器挂掉后重装系统，
源代码没备份。只能重做了，遵循老爸一直以来的教诲，好记性比不过烂笔头。
重新做一个并放到代码管理网站上吧。

